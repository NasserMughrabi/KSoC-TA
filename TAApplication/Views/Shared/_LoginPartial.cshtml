@using Microsoft.AspNetCore.Identity
@using TAApplication.Areas.Data
@using Microsoft.EntityFrameworkCore;
@using TAApplication.Data
@inject SignInManager<TAUser> SignInManager
@inject UserManager<TAUser> UserManager
@inject ApplicationDbContext _context;
@{
    ViewBag.Context = _context;
}
@{
    ViewData["Title"] = "Home Page";
    var data = ViewBag.Context as ApplicationDbContext;
    
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    string role = (UserManager.GetRolesAsync(await UserManager.FindByNameAsync(User.Identity.Name))).Result[0];
    <li class="nav-item">
            @foreach (var item in @data.Users.ToList())
            {
                @if (User.Identity.Name == item.Unid)
                {
                    var names = @item.Name.Split(' ');
                    string firstName = names[0];
                    if (role == "Administrator") role = "Admin";
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @firstName (@role)</a>

                }
            }
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
